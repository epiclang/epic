name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: macos-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    
    - name: Build Darwin
      working-directory: ./language
      run: deno task compile:darwin

    - name: Build Linux
      working-directory: ./language
      run: deno task compile:linux

    - name: Build Windows
      working-directory: ./language
      run: deno task compile:windows

    - name: Build Windows
      working-directory: ./language
      run: deno task package

    # - name: Package
    #   working-directory: ./language
    #   run: deno run -A scripts/package.ts
    
    - name: Create Release and Upload Assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        assets=(./language/dist/epic-x86_64-apple-darwin.zip ./language/dist/epic-aarch64-apple-darwin.zip ./language/dist/epic-x86_64-unknown-linux-gnu.zip ./language/dist/epic-x86_64-pc-windows-msvc.zip)
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ github.ref_name }}" \
          --notes "Release ${{ github.ref_name }}" \
          "${assets[@]}"
        
        gh release delete latest --yes || true
        gh release create latest \
          --title "Latest Release" \
          --notes "This is always the latest release of Epic. Current version: ${{ github.ref_name }}" \
          --prerelease \
          "${assets[@]}"